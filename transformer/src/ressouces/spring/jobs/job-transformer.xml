<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/batch
		http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	">

	<import resource="../config/context.xml" />

	<bean id="prototype" class="batch.project.prototype.Prototype" scope="prototype" />

	<batch:job id="transformer">
	  <batch:step id="copyCSVFileFromFolderAToFolderB" next = "transformFileFromCSVTOXML">
		<batch:tasklet>
			<batch:chunk 
				reader="cvsFileItemReader"
				writer="csvItemCopier"
                commit-interval="10">
			</batch:chunk>
		</batch:tasklet>
	  </batch:step>
	  
	  <batch:step id="transformFileFromCSVTOXML" next = "csvFileDeletion">
		<batch:tasklet>
			<batch:chunk
				reader="cvsFileItemReader" 
                processor="itemCSVToXMLFileTransformer" 
				writer="xmlItemWriter"
                commit-interval="10">
            </batch:chunk>
		</batch:tasklet>
	  </batch:step>
	  
	  <batch:step id="csvFileDeletion" next = "transformFileFromXMLToJSON">
		<batch:tasklet ref = "CustomItemDeleterTasklet"/>
	  </batch:step>
	  
	  <batch:step id="transformFileFromXMLToJSON">
		<batch:tasklet>
			<batch:chunk
				reader="xmlFileItemReader" 
                processor="itemXMLToJSONFileTransformer" 
				writer="itemJSONWriter"
                commit-interval="10">
            </batch:chunk>
		</batch:tasklet>
	  </batch:step>
	  
	</batch:job>

	<bean id="cvsFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">

		<property name="resource" value="classpath:cvs/input/report.csv" />

		<property name="lineMapper">
		    <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
			<property name="lineTokenizer">
				<bean
					class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
					<property name="names" value="id,hostId,name,location,hostName,iPaddress,operativeSystem" />
				</bean>
			</property>
			<property name="fieldSetMapper">
				<bean class="batch.project.transformer.ReportFieldSetMapper" />

				 <!-- if no data type conversion, use BeanWrapperFieldSetMapper to map by name
				<bean
					class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
					<property name="prototypeBeanName" value="report" />
				</bean>
				 -->
			</property>
		    </bean>
		</property>
 
	</bean>
	
	<bean id="itemProcessor" class="batch.project.transformer.CustomItemProcessor" />
	
	<bean id="csvItemCopier" class="batch.project.transformer.CustomItemCopier">
		<property name="resource" value="file:src/ressources/csv/input/input.csv" />
	</bean>
	
	<bean id="itemCSVToXMLFileTransformer" class="batch.project.transformer.CustomItemCSVToXMLFileTransformer" />
	
	<bean id="csvFileDeletion" class="batch.project.transformer.CustomItemDeleterTasklet" />
	
	<bean id="xmlItemWriter" class="org.springframework.batch.item.xml.StaxEventItemReader">
		<property name="resource" value="file:src/ressources/xml/outputs/report.xml" />
		<property name="marshaller" ref="reportMarshaller" />
		<property name="rootTagName" value="report" />
	</bean>

	<bean id="xmlItemWriter" class="org.springframework.batch.item.xml.StaxEventItemWriter">
		<property name="resource" value="file:src/ressources/xml/outputs/report.xml" />
		<property name="marshaller" ref="reportMarshaller" />
		<property name="rootTagName" value="report" />
	</bean>
	
	<bean id="itemCSVToXMLFileTransformer" class="batch.project.transformer.CustomItemXMLToJSONFileTransformer" />
	
	<bean id="itemCSVToXMLFileTransformer" class="batch.project.transformer.CustomItemJSONWriter" />

	<bean id="reportMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
	   <property name="classesToBeBound">
		<list>
			<value>batch.project.prototype.Prototype</value>
		</list>
	    </property>
	</bean>

</beans>